type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 152
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 152
    initialized_from_dependency: false
    possible_answer: |-
      action()
                  toString()
    selected: false
    status: Unchecked
  text: |-
    package thewithFunction1

    import atomictest.eq

    fun buildString(action: StringBuilder.() -> Unit): String =
            with(StringBuilder()) {
                TODO()
            }

    fun main(args: Array<String>) {
        buildString {
            append("Alphabet: ")
            for (ch in 'a'..'z') {
                append(ch)
            }
        } eq "Alphabet: abcdefghijklmnopqrstuvwxyz"
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package thewithFunction1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import kotlin.text.buildString as buildStringLibrary

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestBuildStringViaWith {
        private fun check(
                message: String,
                action: StringBuilder.() -> Unit
        ) {
            Assert.assertEquals(message,
                    buildStringLibrary(action),
                    buildString(action))

        }

        @Test
        fun test1Sample() = check("Wrong result for sample") {
            append("Alphabet: ")
            for (ch in 'a'..'z') {
                append(ch)
            }
        }

        @Test
        fun test2() = check("""Wrong result for 'buildString { append("hi!") }'""") {
            append("hi!")
        }
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+The+with%28%29+Function+%2F+Exercise1
status: Unchecked
record: -1
