type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 87
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 87
    initialized_from_dependency: false
    possible_answer: generateSequence(n) { it + 1 }
    selected: false
    status: Unchecked
  text: |-
    package moreLibraryFunctions1

    import atomictest.eq

    fun from(n: Int): Sequence<Int> = TODO()

    fun main(args: Array<String>) {
        from(10).take(2).toList() eq listOf(10, 11)
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package moreLibraryFunctions1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestCreatingSequence {
        @Test
        fun test1Sample() {
            Assert.assertEquals("Wrong result for sample",
                    listOf(10, 11),
                    from(10).take(2).toList())
        }

        @Test
        fun test2() {
            Assert.assertEquals("Wrong first elements of 'from(1000)' sequence:",
                    (1000..1010).toList(),
                    from(1000).take(11).toList())
        }
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+More+Library+Functions+%2F+Exercise1
status: Unchecked
record: -1
