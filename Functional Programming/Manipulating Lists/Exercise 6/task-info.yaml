type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 111
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 111
    initialized_from_dependency: false
    possible_answer: it
    selected: false
    status: Unchecked
  text: |-
    package manipulatingLists6

    import atomictest.eq

    fun <T> List<List<T>>.flatten(): List<T> =
            flatMap { TODO() }

    fun main(args: Array<String>) {
        val listOfLists = listOf(listOf(1, 2, 3), listOf(4, 5, 6))

        listOfLists.flatten() eq listOf(1, 2, 3, 4, 5, 6)
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package manipulatingLists6

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import kotlin.collections.flatten as flattenLibrary

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestFlatten {
        private fun <T> checkFlatten(
                list: List<List<T>>
        ) {
            Assert.assertEquals("Wrong 'flatten' implementation",
                    list.flattenLibrary(), list.flatten())
        }

        @Test
        fun test1Sample() = checkFlatten(listOf(listOf(1, 2, 3), listOf(4, 5, 6)))

        @Test
        fun test5() = checkFlatten(listOf(listOf('a', 'b'), listOf('c', 'd', 'e', 'f')))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+Manipulating+Lists+%2F+Exercise6
status: Unchecked
record: -1
