type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 93
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 93
    initialized_from_dependency: false
    possible_answer: return list.filterNotNull().sum()
    selected: false
    status: Unchecked
  text: |-
    package operationsonCollections3

    import atomictest.eq

    fun sum(list: List<Int?>): Int {
        TODO()
    }

    fun main(args: Array<String>) {
        sum(listOf(1, 2, null)) eq 3
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package operationsonCollections3

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestOperations {
        private fun check(list: List<Int?>) {
            Assert.assertEquals("Wrong result for $list",
                    list.filterNotNull().sum(),
                    sum(list))
        }

        @Test
        fun test1Sample() = check(listOf(1, 2, null))

        @Test
        fun test2Sample() = check(listOf(null, null, null))

        @Test
        fun test3() = check(listOf(1, 2, 3))

        @Test
        fun test4() = check(listOf(1, null, 1, null, 1, null, 1, null))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+Operations+on+Collections+%2F+Exercise3
status: Unchecked
record: -1
