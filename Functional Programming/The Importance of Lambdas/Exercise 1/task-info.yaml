type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 157
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 157
    initialized_from_dependency: false
    possible_answer: return filter { it.age > 17 }.map { it.name }
    selected: false
    status: Unchecked
  text: |-
    package theImportanceofLambdas1

    import atomictest.eq

    class Person(val name: String, val age: Int)

    fun List<Person>.getNamesOfAdults(): List<String> {
        TODO()
    }

    fun main(args: Array<String>) {
        val people = listOf(Person("Alice", 17), Person("Bob", 19))
        people.getNamesOfAdults() eq listOf("Bob")
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package theImportanceofLambdas1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestAdults {
        private fun checkNames(people: List<Person>) {
            Assert.assertEquals("Wrong result for $people:",
                    people.filter { it.age > 17 }.map { it.name },
                    people.getNamesOfAdults())
        }

        @Test
        fun test1Sample() = checkNames(listOf(Person("Alice", 17), Person("Bob", 19)))

        @Test
        fun test2() = checkNames(listOf(Person("Alice", 17), Person("Bob", 19), Person("Charlie", 18)))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+The+Importance+of+Lambdas+%2F+Exercise1
status: Unchecked
record: -1
