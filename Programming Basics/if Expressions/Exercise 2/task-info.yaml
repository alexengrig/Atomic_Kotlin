type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 52
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 52
    initialized_from_dependency: false
    possible_answer: |2-

              if (number > 0) number else -number
    selected: false
    status: Unchecked
  text: |-
    package ifExpressions2

    fun abs(number: Int): Int = TODO()

    fun main(args: Array<String>) {
        println(abs(-19))  // 19
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |
    package ifExpressions2

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestIfExpressions2 {
        private fun checkFunction(number: Int) {
            val abs = if (number > 0) number else -number
            Assert.assertEquals("abs($number) should return $abs",
                    abs, abs(number))
        }

        @Test fun testAbs1() = checkFunction(1)

        @Test fun testAbs2() = checkFunction(-3)

        @Test fun testAbs3() = checkFunction(-1001)

        @Test fun testAbs4() = checkFunction(0)
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Programming+Basics+%2F+if+Expressions+%2F+Exercise2
status: Unchecked
record: -1
