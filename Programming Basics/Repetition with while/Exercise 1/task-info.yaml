type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 62
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 62
    initialized_from_dependency: false
    possible_answer: |-
      var sum = 0
          var i = 0
          while (i <= number) {
              sum += i
              i++
          }
          return sum
    selected: false
    status: Unchecked
  text: |-
    package repetitionwithwhile1

    fun sum(number: Int): Int {
        TODO()
    }

    fun main(args: Array<String>) {
        println(sum(10))  // 55
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |
    package repetitionwithwhile1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestRepetitionWithWhile {
        private fun checkSum(i: Int) {
            val expectedSum = (1..i).sum()
            Assert.assertEquals("sum($i) should be $expectedSum", expectedSum, sum(i))
        }

        @Test fun testSum1() = checkSum(1)

        @Test fun testSum2() = checkSum(2)

        @Test fun testSum3() = checkSum(5)

        @Test fun testSum4() = checkSum(10)

        @Test fun testSum5() = checkSum(100)
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Programming+Basics+%2F+Repetition+with+while+%2F+Exercise1
status: Unchecked
record: -1
