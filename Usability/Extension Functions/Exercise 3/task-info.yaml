type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 313
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 313
    initialized_from_dependency: false
    possible_answer: 0 in x..(x + width) && 0 in y..(y + height)
    selected: false
    status: Unchecked
  text: |-
    package extensionFunctions3

    import atomictest.eq

    class Rectangle(
            val x: Int,
            val y: Int,
            val width: Int,
            val height: Int
    ) {
        override fun toString(): String {
            return "[x=$x, y=$y, width=$width, height=$height]"
        }
    }

    fun Rectangle.coversZero(): Boolean =
            TODO()

    fun main(args: Array<String>) {
        val first = Rectangle(-1, -1, 2, 2)
        val second = Rectangle(1, 1, 2, 2)
        first.coversZero() eq true
        second.coversZero() eq false
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package extensionFunctions3

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestRectangle {
        private fun message(rectangle: Rectangle, expected: Boolean) =
                "Wrong result for rectangle $rectangle; it should${if (expected) "" else "n't"} cover zero:"

        private fun checkCovering(rectangle: Rectangle, expected: Boolean) {
            Assert.assertEquals(message(rectangle, expected), expected, rectangle.coversZero())
        }

        @Test
        fun test1Sample() = checkCovering(Rectangle(-1, -1, 2, 2), true)

        @Test
        fun test2Sample() = checkCovering(Rectangle(1, 1, 2, 2), false)

        @Test
        fun test3() = checkCovering(Rectangle(-10, -10, 10, 10), true)

        @Test
        fun test4() = checkCovering(Rectangle(-10, -10, 9, 9), false)

        @Test
        fun test5() = checkCovering(Rectangle(-10, -10, 11, 9), false)
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Usability+%2F+Extension+Functions+%2F+Exercise3
status: Unchecked
record: -1
