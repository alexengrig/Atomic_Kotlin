type: theory
files:
- name: src/Simple.kt
  visible: true
  text: |-
    // DataClasses/Simple.kt
    import atomictest.eq

    data class Simple(
      val arg1: String,
      var arg2: Int
    )

    fun main(args: Array<String>) {
      val s1 = Simple("Hi", 29)
      val s2 = Simple("Hi", 29)
      s1 eq s2
    }
    /* Output:
    Simple(arg1=Hi, arg2=29)
    */
  learner_created: false
- name: src/DataClasses.kt
  visible: true
  text: |-
    // DataClasses/DataClasses.kt
    package dataclasses
    import atomictest.*

    data class Contact(
      val name: String,
      val number: String
    )

    class Person(val name: String)

    fun main(args: Array<String>) {
      Contact("Miffy", "1-234-567890") eq
      Contact("Miffy", "1-234-567890")

      // These seem the same, but they're not:
      Person("Cleo") neq Person("Cleo")
    }
    /* Sample output:
    Contact(name=Miffy, number=1-234-567890)
    dataclasses.Person@54bedef2
    */
  learner_created: false
- name: src/CopyDataClass.kt
  visible: true
  text: |-
    // DataClasses/CopyDataClass.kt
    import atomictest.eq

    data class DetailedContact(
      val name: String,
      val surname: String,
      val number: String,
      val address: String
    )

    fun main(args: Array<String>) {
      val contact = DetailedContact(
        "Miffy",
        "Miller",
        "1-234-567890",
        "1600 Amphitheatre Parkway")
      val newContact = contact.copy(
        number = "098-765-4321",
        address = "Brandschenkestrasse 110")
      newContact eq DetailedContact(
        "Miffy",
        "Miller",
        "098-765-4321",
        "Brandschenkestrasse 110")
    }
  learner_created: false
status: Unchecked
record: -1
