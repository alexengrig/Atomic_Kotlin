type: theory
files:
- name: src/StringIsNullOr.kt
  visible: true
  text: |-
    // NullableExtensions/StringIsNullOr.kt
    import atomictest.eq

    fun main(args: Array<String>) {
      val s1: String? = null
      s1.isNullOrEmpty() eq true
      s1.isNullOrBlank() eq true

      val s2 = ""
      s2.isNullOrEmpty() eq true
      s2.isNullOrBlank() eq true

      val s3: String = " \t\n"
      s3.isNullOrEmpty() eq false
      s3.isNullOrBlank() eq true
    }
  learner_created: false
- name: src/NullableParameter.kt
  visible: true
  text: |-
    // NullableExtensions/NullableParameter.kt
    import atomictest.eq

    fun isNullOrEmpty(s: String?): Boolean =
      s == null || s.isEmpty()

    fun main(args: Array<String>) {
      isNullOrEmpty(null) eq true
      isNullOrEmpty("") eq true
    }
  learner_created: false
- name: src/Definition.kt
  visible: true
  text: |-
    // NullableExtensions/Definition.kt
    import atomictest.eq

    fun String?.isNullOrEmpty(): Boolean =
      this == null || this.isEmpty()

    fun main(args: Array<String>) {
      "".isNullOrEmpty() eq true
    }
  learner_created: false
status: Unchecked
record: -1
