type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 91
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 91
    initialized_from_dependency: false
    possible_answer: if (this != null) this else ""
    selected: false
    status: Unchecked
  text: |-
    package extensionsforNullableTypes1

    import atomictest.eq

    fun String?.orEmpty(): String = TODO()

    fun main(args: Array<String>) {

        null.orEmpty() eq ""

        "abc".orEmpty() eq "abc"
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package extensionsforNullableTypes1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestOrEmpty {
        private fun checkExpectedValue(s: String?, value: String) {
            Assert.assertEquals("Wrong value for $s:", value, s.orEmpty())
        }

        @Test fun test1Sample() = checkExpectedValue(null, "")

        @Test fun test2Sample() = checkExpectedValue("abc", "abc")

        @Test fun test3() = checkExpectedValue("s", "s")
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Usability+%2F+Extensions+for+Nullable+Types+%2F+Exercise1
status: Unchecked
record: -1
