type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 360
    length: 0
    placeholder_text: ""
    initial_state:
      length: 0
      offset: 360
    initialized_from_dependency: false
    possible_answer: |-
      fun checkUnspecified(s: String?) = s
              ?: "Unspecified"
    selected: false
    status: Unchecked
  - offset: 397
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 397
    initialized_from_dependency: false
    possible_answer: |2-
       """
             |name: $name
             |email: ${checkUnspecified(personalInfo?.email)}
             |country: ${checkUnspecified(personalInfo?.address?.country)}
             |city: ${checkUnspecified(personalInfo?.address?.city)}
             |street: ${checkUnspecified(personalInfo?.address?.street)}
          """.trimMargin()
    selected: false
    status: Unchecked
  text: |-
    package safeCallsandTheElvisOperator2

    data class Client(
            val name: String,
            val personalInfo: PersonalInfo? = null)

    data class PersonalInfo(
            val email: String? = null,
            val address: Address? = null)

    data class Address(
            val country: String? = null,
            val city: String? = null,
            val street: String? = null)



    fun Client.getFullInfo(): String = TODO()

    fun main(args: Array<String>) {
        val alice = Client("Alice",
                PersonalInfo(
                        email = "alice@gmail.com",
                        address = Address("Germany", "Munich")))
        println(alice.getFullInfo())
        println("---")
        println(Client("Bob").getFullInfo())
    }
    /* Output:
    name: Alice
    email: alice@gmail.com
    country: Germany
    city: Munich
    street: Unspecified
    ---
    name: Bob
    email: Unspecified
    country: Unspecified
    city: Unspecified
    street: Unspecified
    */
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package safeCallsandTheElvisOperator2

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestClientFullInfo {
        private fun checkFullInfoRepresentation(client: Client, fullInfo: String) {
            Assert.assertEquals("Wrong full info representation:", fullInfo.trimMargin(), client.getFullInfo())
        }

        @Test
        fun test1Sample() {
            checkFullInfoRepresentation(
                    Client("Alice", PersonalInfo(
                            email = "alice@gmail.com",
                            address = Address("Germany", "Munich"))),
                    """
                    |name: Alice
                    |email: alice@gmail.com
                    |country: Germany
                    |city: Munich
                    |street: Unspecified""")
        }

        @Test
        fun test2Sample() {
            checkFullInfoRepresentation(Client("Bob"), """
                |name: Bob
                |email: Unspecified
                |country: Unspecified
                |city: Unspecified
                |street: Unspecified""".trimMargin()
            )
        }

        @Test
        fun test3() {
            checkFullInfoRepresentation(
                    Client("Harry", PersonalInfo(
                            address = Address(street = "4 Privet Drive")
                    )), """
                    |name: Harry
                    |email: Unspecified
                    |country: Unspecified
                    |city: Unspecified
                    |street: 4 Privet Drive""".trimMargin())
        }
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Usability+%2F+Safe+Calls+%26+the+Elvis+Operator+%2F+Exercise2
status: Unchecked
record: -1
